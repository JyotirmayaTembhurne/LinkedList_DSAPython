# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def deleteDuplicates(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if not head:
            return head
        elif not head.next:
            return head
        current = head
        pair = dict()
        allowed = list()
        while current:
            try:
                pair[current.val] +=1
            except:
                pair[current.val] = 1
            current = current.next
        for key,value in pair.items():
            if value ==1:
                allowed.append(key)
        current = ListNode(0,head)
        if allowed:
            current = head
            prev = current
            for value in allowed:
                current.val = value
                prev = current
                current = current.next
            prev.next = None
            return head
        else:
            return None
