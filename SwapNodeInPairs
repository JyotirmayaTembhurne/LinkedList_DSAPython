# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def swapPairs(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if not head or not head.next:
            return head
        else:
            result = list()
            current = head
            while current:
                result.append(current.val)
                current= current.next
            current = head
            length = len(result)
            if length<2:
                return head
            for i in range(1,length,2):
                temp = result[i]
                result[i] = result[i-1]
                result[i-1] = temp
            print(result)
            for value in result:
                current.val = value
                current = current.next
        return head

        
